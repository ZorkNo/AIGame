using System;
using AIGame.AI;
using AIGame.CoreGame;
using AIGame.Interfaces;

namespace AIGame.League
{
    public class Player
    {
<<<<<<< HEAD
        public IAiType AiType;
        public int Wins;
        public int Loses;
        public int Ties;
        public double EloRating =2000;
        public int GamesPlayed;
=======
        public static Player Create<T>() where T : BaseAi
        {
            return new Player(typeof(T));
        }
        public Type AiType { get; }

        public string AiName => AiType.Name;
        public int Wins { get; private set; }
        public int Loses { get; private set; }
        public int Ties { get; private set; }
        public int GamesPlayed { get; private set; }

        private Player(Type aiType)
        {
            AiType = aiType;
        }

        public void AddGame(Game game)
        {
            GamesPlayed++;

            if (game.BlueAiType == AiType && game.GameResult == GameResult.BlueWin)
            { 
                Wins++;
                return;
            }

            if (game.RedAiType == AiType && game.GameResult == GameResult.RedWin)
            { 
                Wins++;
                return;
            }

            if (game.GameResult == GameResult.Tie)
            {
                Ties++;
                return;
            }
            Loses++;
            //throw new Exception("no result");
        }
>>>>>>> pr/n1_bobend
    }
}
